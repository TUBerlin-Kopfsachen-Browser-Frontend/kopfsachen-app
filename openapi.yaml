openapi: 3.0.3
info:
  title: Kopfsachen
  version: '0.1'
  description: Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.
  contact:
    name: Kopfsachen e. V.
    email: mail@kopfsachen.org
    url: 'https://www.kopfsachen.org'
paths:
  /user:
    post:
      summary: Create user.
      operationId: post-user
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      tags:
        - user-service
      description: Create a user.
    get:
      summary: Get all users.
      operationId: get-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user-with-id'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      tags:
        - user-service
      description: Get all users.
  '/user/{userId}':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: Read user by id.
      tags:
        - user-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-with-id'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-user-id
      description: Read user by id.
    put:
      summary: Update user by id.
      operationId: put-user-id
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      tags:
        - user-service
      description: Update user by id.
    delete:
      summary: Delete user by id.
      operationId: delete-user-id
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
      tags:
        - user-service
      description: Delete user by id.
  '/user/{userId}/settings':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get user's settings.
      tags:
        - user-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/setting'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-user-settings
      description: Get user's settings.
    delete:
      summary: Delete user by id.
      operationId: delete-user-settings
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
      tags:
        - user-service
      description: Delete user by id.
    post:
      summary: Set user's settings.
      operationId: post-user-userId-settings
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Set user's settings.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/setting'
      tags:
        - user-service
  '/diary/{userId}':
    get:
      summary: Get mood diary by userId.
      tags:
        - mood-diary-service
      operationId: get-diary
      description: Get mood diary by userId.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mood'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      x-tira: true
    parameters:
      - $ref: '#/components/parameters/userId'
    post:
      summary: Add mood to diary
      operationId: post-diary-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add mood to user's diary.
      tags:
        - mood-diary-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mood'
      x-tira: true
    delete:
      summary: Delete mood from user's diary.
      operationId: deleteuser-userId-diary
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Delete mood from user's diary.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timestamp'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      tags:
        - mood-diary-service
  /safetyNet:
    get:
      summary: Get safety nets of all users.
      tags:
        - motivator-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/safetyNetItem'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-safetyNet
      description: Get safety nets of all users - without identifying the users individually.
  '/safetyNet/{userId}':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get safety net by userId.
      tags:
        - motivator-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/safetyNetItem'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-user-userId-safetyNet
      description: Get safety net by userId.
    post:
      summary: Add safety net item to user's safety net.
      operationId: post-user-userId-safetyNet
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add safety net item to user's safety net.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/safetyNetItem'
      tags:
        - motivator-service
    delete:
      summary: Delete safetyNet item by timestamp.
      operationId: delete-user-userId-safetyNet
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Delete safetyNet item by timestamp.
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: date-time
      tags:
        - motivator-service
  /motivator:
    parameters: []
    get:
      summary: Get all motivators.
      tags:
        - motivator-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/motivator'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-motivators-userId
      description: Gett all motivators.
    post:
      summary: Add motivator
      operationId: post-motivator
      responses:
        '200':
          description: OK
      description: Add a new motivator.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivator'
      tags:
        - motivator-service
    delete:
      summary: Delete a motivator.
      operationId: delete-motivator
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Delete a motivator by id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivatorId'
      tags:
        - motivator-service
  '/motivator/{userId}':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get current motivators by userId.
      tags:
        - motivator-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/motivator'
                    - $ref: '#/components/schemas/motivatorResult'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-motivator-userId
      description: Get current motivators by userId.
    post:
      summary: Add motivator to user's motivators.
      operationId: post-motivator-userId
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add motivator to user's motivators.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivator'
      tags:
        - motivator-service
    delete:
      summary: Delete a motivator from user's motivators.
      operationId: delete-motivator-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivatorId'
      description: Delete a motivator from user's motivators.
      tags:
        - motivator-service
  '/motivator/{userId}/result/{motivatorId}':
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/motivatorId'
    post:
      summary: Add a new result to user's current motivator.
      operationId: post-motivator-userId-feedback-motivatorId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add a new result to user's current motivator.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivatorResult'
      tags:
        - motivator-service
    delete:
      summary: Delete result from user's current motivator by timestamp.
      operationId: delete-motivator-userId-result-motivatorId
      responses:
        '200':
          description: OK
      description: Delete result from user's current motivator by timestamp.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timestamp'
      tags:
        - motivator-service
  '/notification/{userId}':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get notifications for user by id.
      tags:
        - notification-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-notification-userId
      description: Get notifications for user by id.
    post:
      summary: Set notification for user by id.
      operationId: post-notification-userId
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Set notification for user by id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notification'
        description: ''
      tags:
        - notification-service
    delete:
      summary: Delete notification for user by id.
      operationId: delete-notification-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notificationId'
      description: Delete notification for user by id.
      tags:
        - notification-service
  /tilt:
    get:
      summary: Get tilt document.
      tags:
        - tilt-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tilt'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-tilt
      description: 'Get tilt document, i.e. a machine-readable privacy policy.'
      x-tira: false
    post:
      summary: Set tilt document.
      operationId: post-tilt
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: 'Set tilt document, i.e. a machine-readable privacy policy.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tilt'
      tags:
        - tilt-service
  '/wiki/{wikiEntryId}':
    get:
      summary: Get all wiki entries
      tags:
        - wiki-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/wikiEntry'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-wiki
      description: Get all wiki entries.
    post:
      summary: Add wiki entry
      operationId: post-wiki
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add wiki entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wikiEntry'
      x-tira: false
      tags:
        - wiki-service
    delete:
      summary: Delete wiki entry by id.
      operationId: delete-wiki
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Delete wiki entry by id.
      tags:
        - wiki-service
    parameters:
      - $ref: '#/components/parameters/wikiEntryId'
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |-
        Example: 
        > Authorization: Bearer <token>
      x-last-modified: 1646648515924
  schemas:
    user:
      description: A user object
      type: object
      x-examples:
        example-1:
          username: maja
          email: maja@majassen.de
          password: ahcezie2aiKoon0yaequ3eive7uphie9
          role: user
          created: '2022-03-07T14:15:44+00:00'
          changed: '2022-03-07T14:15:44+00:00'
        example-2:
          id: 0
          username: string
          email: user@example.com
          password: pa$$word
          role: admin
          created: '2019-08-24T14:15:22Z'
          changed: '2019-08-24T14:15:22Z'
      x-tira: true
      properties:
        username:
          type: string
          minLength: 2
          maxLength: 25
        email:
          type: string
          minLength: 1
          format: email
          description: 'Passwords are never stored in plain text, but as hash(pwd) + salt from an widely used library.'
        password:
          type: string
          format: password
        role:
          type: string
          minLength: 1
          description: Refers to privileges.
          enum:
            - admin
            - user
        lang:
          type: string
          default: de
          enum:
            - de
            - en
          minLength: 2
          maxLength: 2
        created:
          type: string
          minLength: 1
          format: date-time
        changed:
          type: string
          minLength: 1
          format: date-time
      required:
        - username
        - email
        - password
        - role
        - lang
        - created
        - changed
    user-with-id:
      title: user-with-id
      allOf:
        - type: object
          properties:
            id:
              type: number
        - $ref: '#/components/schemas/user'
      x-examples:
        example-1:
          id: 42
          username: string
          email: user@example.com
          password: pa$$word
          role: admin
          created: '2019-08-24T14:15:22Z'
          changed: '2019-08-24T14:15:22Z'
    tilt:
      description: 'A valid tilt document validates against the tilt schema: https://github.com/Transparency-Information-Language/schema/blob/master/tilt-schema.json'
      type: object
      x-examples:
        example-1:
          meta:
            _id: f1424f86-ca0f-4f0c-9438-43cc00509931
            name: Green Company
            created: '2020-04-03T15:53:05.929588'
            modified: '2020-04-03T15:53:05.929588'
            version: 2
            language: de
            status: active
            url: 'https://green-bikes.de/privacy'
            _hash: be81d309088dde861ab5fc4d62d4bbfe0aeef3e3baf2f5362c1086f451f0a1e7
          controller:
            name: Green Company AG
            division: Product line e-mobility
            address: 'Wolfsburger Ring 2, 38440 Berlin'
            country: DE
            representative:
              name: Jane Super
              email: contact@greencompany.de
              phone: 0049 151 1234 5678
          dataProtectionOfficer:
            name: Jane Super
            address: 'Wolfsburger Ring 2, 38440 Berlin'
            country: DE
            email: contact@greencompany.de
            phone: 0049 151 1234 5678
          dataDisclosed:
            - _id: f1424f86-ca0f-4f0c-9438-43cc00509931
              category: E-mail address
              purposes:
                - purpose: Marketing
                  description: Newsletter will be sent out once a month.
              legalBases:
                - reference: GDPR-99-1-a
                  description: The data are processed on the basis of Art. 99 GDPR which states...
                - reference: BDSG-42-5
                  description: BDSG-42-5 refers to the processing of personal data within...
              legitimateInterests:
                - exists: false
                  reasoning: There is an legitimate interest based on ... and is not overwritten because ...
              recipients:
                - name: Yellow Company AG
                  division: Product line e-mobility
                  address: 'Triana 123, 9999 Seville'
                  country: ES
                  representative:
                    name: Jane Super
                    email: contact@yellowcompany.de
                    phone: 0049 151 1234 9876
                  category: Marketing content provider
                - category: Responsible Statistical Institutes
              storage:
                - temporal:
                    - description: Creating backups.
                      ttl: P3Y6M4DT12H30M5S
                    - description: Finishing ordering process.
                      ttl: '2020-08-09T18:31:42P3Y6M4DT12H30M17S'
                  purposeConditional:
                    - Data is stored until the end of the ordering process.
                  legalBasisConditional:
                    - SGB-100-42
                  aggregationFunction: max
              nonDisclosure:
                legalRequirement: false
                contractualRegulation: false
                obligationToProvide: false
                consequences: 'If the data is not disclosed, the shipment cannot be delivered.'
          thirdCountryTransfers:
            - country: ES
              adequacyDecision:
                available: true
                description: An adequacy decision was made on the 23rd April 2020 by...
              appropriateGuarantees:
                available: true
                description: Here the appropriate guarantee was formulated by...
              presenceOfEnforceableRightsAndEffectiveRemedies:
                available: true
                description: These rights are given because of...
              standardDataProtectionClause:
                available: true
                description: 'The standard data protection clause which applies here can be found here: ...'
          accessAndDataPortability:
            available: true
            description: Data access is possible through...
            url: 'https://green-bikes.de/access'
            email: access@greencompany.de
            identificationEvidences:
              - ID card copy
              - Email verification
            administrativeFee:
              amount: 0
              currency: EUR
            dataFormats:
              - json
              - xml
          sources:
            - _id: f1423cc00509931
              dataCategory: Creditworthiness
              sources:
                - description: This information could be retrieved from...
                  url: 'https://blueCompany.org'
                  publiclyAvailable: false
          rightToInformation:
            available: true
            description: For the right to information please use this contact form and...
            url: 'https://greencompany.org/rightToInformation'
            email: contact@greencompany.de
            identificationEvidences:
              - ID card copy
              - Email verification
          rightToRectificationOrDeletion:
            available: true
            description: For the right to rectification please use this contact form and...
            url: 'https://greencompany.org/rights'
            email: contact@greencompany.de
            identificationEvidences:
              - ID card copy
              - Email verification
          rightToDataPortability:
            available: false
            description: Data portability is only possible when...
            url: 'https://greencompany.org/rights'
            email: contact@greencompany.de
            identificationEvidences:
              - ID card copy
          rightToWithdrawConsent:
            available: true
            description: For the right to withdraw consent please use this contact form and...
            url: 'https://greencompany.org/rights'
            email: contact@greencompany.de
            identificationEvidences:
              - Email verification
          rightToComplain:
            available: true
            description: For the right to complain please use this contact form and...
            url: 'https://greencompany.org/rights'
            email: contact@greencompany.de
            identificationEvidences:
              - ID card copy
              - Email verification
            supervisoryAuthority:
              name: Commissioner for Data Protection
              address: 'Friedrichstrasse 219, 10969 Berlin'
              country: DE
              email: mailbox@privacy-berlin.de
              phone: 0049 444 222 111
          automatedDecisionMaking:
            inUse: true
            logicInvolved: The personal data are processed as follows...
            scopeAndIntendedEffects: From processing follows...
          changesOfPurpose:
            - description: Due to technical requirements...
              affectedDataCategories:
                - Email adress
                - Credit score
              plannedDateOfChange: '2020-08-20'
              urlOfNewVersion: 'https://greencomp.de/privacypolicy/2'
      properties:
        meta:
          type: object
          properties:
            _id:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
            created:
              type: string
              minLength: 1
            modified:
              type: string
              minLength: 1
            version:
              type: number
            language:
              type: string
              minLength: 1
            status:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            _hash:
              type: string
              minLength: 1
        controller:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            division:
              type: string
              minLength: 1
            address:
              type: string
              minLength: 1
            country:
              type: string
              minLength: 1
            representative:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
                phone:
                  type: string
                  minLength: 1
        dataProtectionOfficer:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            address:
              type: string
              minLength: 1
            country:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            phone:
              type: string
              minLength: 1
        dataDisclosed:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              _id:
                type: string
                minLength: 1
              category:
                type: string
                minLength: 1
              purposes:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    purpose:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
              legalBases:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    reference:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
              legitimateInterests:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    exists:
                      type: boolean
                    reasoning:
                      type: string
                      minLength: 1
              recipients:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 1
                    division:
                      type: string
                      minLength: 1
                    address:
                      type: string
                      minLength: 1
                    country:
                      type: string
                      minLength: 1
                    representative:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        email:
                          type: string
                          minLength: 1
                        phone:
                          type: string
                          minLength: 1
                      required:
                        - name
                        - email
                        - phone
                    category:
                      type: string
                      minLength: 1
              storage:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    temporal:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: object
                        properties:
                          description:
                            type: string
                            minLength: 1
                          ttl:
                            type: string
                            minLength: 1
                        required:
                          - description
                          - ttl
                    purposeConditional:
                      type: array
                      items:
                        type: object
                    legalBasisConditional:
                      type: array
                      items:
                        type: object
                    aggregationFunction:
                      type: string
                      minLength: 1
              nonDisclosure:
                type: object
                properties:
                  legalRequirement:
                    type: boolean
                  contractualRegulation:
                    type: boolean
                  obligationToProvide:
                    type: boolean
                  consequences:
                    type: string
                    minLength: 1
                required:
                  - legalRequirement
                  - contractualRegulation
                  - obligationToProvide
                  - consequences
        thirdCountryTransfers:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              country:
                type: string
                minLength: 1
              adequacyDecision:
                type: object
                properties:
                  available:
                    type: boolean
                  description:
                    type: string
                    minLength: 1
              appropriateGuarantees:
                type: object
                properties:
                  available:
                    type: boolean
                  description:
                    type: string
                    minLength: 1
              presenceOfEnforceableRightsAndEffectiveRemedies:
                type: object
                properties:
                  available:
                    type: boolean
                  description:
                    type: string
                    minLength: 1
              standardDataProtectionClause:
                type: object
                properties:
                  available:
                    type: boolean
                  description:
                    type: string
                    minLength: 1
        accessAndDataPortability:
          type: object
          properties:
            available:
              type: boolean
            description:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            identificationEvidences:
              type: array
              items:
                type: object
            administrativeFee:
              type: object
              properties:
                amount:
                  type: number
                currency:
                  type: string
                  minLength: 1
            dataFormats:
              type: array
              items:
                type: object
        sources:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              _id:
                type: string
                minLength: 1
              dataCategory:
                type: string
                minLength: 1
              sources:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      minLength: 1
                    url:
                      type: string
                      minLength: 1
                    publiclyAvailable:
                      type: boolean
        rightToInformation:
          type: object
          properties:
            available:
              type: boolean
            description:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            identificationEvidences:
              type: array
              items:
                type: object
        rightToRectificationOrDeletion:
          type: object
          properties:
            available:
              type: boolean
            description:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            identificationEvidences:
              type: array
              items:
                type: object
        rightToDataPortability:
          type: object
          properties:
            available:
              type: boolean
            description:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            identificationEvidences:
              type: array
              items:
                type: object
        rightToWithdrawConsent:
          type: object
          properties:
            available:
              type: boolean
            description:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            identificationEvidences:
              type: array
              items:
                type: object
        rightToComplain:
          type: object
          properties:
            available:
              type: boolean
            description:
              type: string
              minLength: 1
            url:
              type: string
              minLength: 1
            email:
              type: string
              minLength: 1
            identificationEvidences:
              type: array
              items:
                type: object
            supervisoryAuthority:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                address:
                  type: string
                  minLength: 1
                country:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
                phone:
                  type: string
                  minLength: 1
        automatedDecisionMaking:
          type: object
          properties:
            inUse:
              type: boolean
            logicInvolved:
              type: string
              minLength: 1
            scopeAndIntendedEffects:
              type: string
              minLength: 1
        changesOfPurpose:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              description:
                type: string
                minLength: 1
              affectedDataCategories:
                type: array
                items:
                  type: object
              plannedDateOfChange:
                type: string
                minLength: 1
              urlOfNewVersion:
                type: string
                minLength: 1
    mood:
      title: mood
      type: object
      properties:
        type:
          type: string
          enum:
            - positive
            - negative
            - neutral
        description:
          type: string
          example: angry
        timestamp:
          type: string
          format: date-time
    timestamp:
      title: timestamp
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
    safetyNetItem:
      description: ''
      type: object
      x-examples:
        example-1:
          name: Theo
          type: pet
          strategies:
            - cuddle
            - play
            - go for a walk
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
          minLength: 1
          enum:
            - pet
            - other
            - situationControl
            - relaxation
          description: 'Which kind of item is this (i.a., influences symbol in UI)?'
        strategies:
          type: array
          description: How can this item help the user to feel better?
          items:
            type: string
        feedback:
          type: array
          items:
            $ref: '#/components/schemas/safetyNetItemFeedback'
      required:
        - name
        - type
        - strategies
    safetyNetItemFeedback:
      description: ''
      type: object
      x-examples: {}
      title: safetyNetItemFeedback
      properties:
        itHelped:
          type: boolean
        comment:
          type: string
        timestamp:
          type: string
          format: date-time
    motivator:
      title: motivator
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - situationControl
            - relaxation
        headline:
          type: string
        description:
          type: string
        textContents:
          type: array
          items:
            type: string
        mediaContents:
          type: array
          items:
            type: object
            properties:
              format:
                type: string
                enum:
                  - document
                  - image
                  - audio
                  - video
              url:
                type: string
                format: uri
        userInputForm:
          type: string
          description: 'May describe a form for input by the user (format to be defined, e.g., JSON Schema).'
    motivatorResult:
      title: motivatorResult
      type: object
      properties:
        motivatorId:
          type: string
        timestamp:
          type: string
          format: date-time
        results:
          type: array
          items:
            type: string
    motivatorId:
      title: motivatorId
      type: object
      properties:
        id:
          type: number
    notification:
      title: notification
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        ttl:
          type: string
          description: 'time to live (i.e., not relevant anymore at specified time)'
          format: date-time
        '':
          type: string
    notificationId:
      title: notificationId
      type: object
      properties:
        id:
          type: string
    setting:
      title: setting
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: Key-value pairs of settings in the app.
    wikiEntry:
      title: wikiEntry
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        contents:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - text
                  - url
              content:
                type: string
  headers: {}
  responses: {}
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: integer
    motivatorId:
      name: motivatorId
      in: path
      required: true
      schema:
        type: integer
    wikiEntryId:
      name: wikiEntryId
      in: path
      required: true
      schema:
        type: string
  requestBodies: {}
tags:
  - name: user-service
  - name: notification-service
  - name: mood-diary-service
  - name: motivator-service
  - name: wiki-service
  - name: administration-service
  - name: tilt-service
servers:
  - url: 'https://api.implementation.online'
    description: ''
    variables: {}
  - url: 'http://localhost'
    description: ''
    variables: {}
#security:
#  - JWTAuth: []
